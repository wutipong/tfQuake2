STRUCT(VSInput)
{
	DATA(float3, inVertex, POSITION);
    DATA(float4, inColor, COLOR);
};

PUSH_CONSTANT(PushConstant, b1)
{
    DATA(float4x4, mvpMatrix, None);
};

CBUFFER(UniformBufferObject, UPDATE_FREQ_NONE, b0, binding = 0)
{
    DATA(float, pointSize, None);
    DATA(float, pointScale, None);
    DATA(float, minPointSize, None);
    DATA(float, maxPointSize, None);
    DATA(float, att_a, None);
    DATA(float, att_b, None);
    DATA(float, att_c, None);
};

STRUCT(VSOutput)
{
	DATA(float4, position, SV_Position);
	DATA(float4, color, COLOR);
    DATA(float, pointSize, SV_PointSize);
};

VSOutput VS_MAIN( VSInput In, SV_InstanceID(uint) InstanceID )
{
    INIT_MAIN;
    VSOutput Out;

    Out.position = mul(Get(mvpMatrix), float4(In.inVertex, 1.0));

    float dist_atten = Get(pointScale) / (Get(att_a) + Get(att_b) * Out.position.w + Get(att_c) * pow(Out.position.w, 2) );
    Out.pointSize = clamp(Get(pointScale) * Get(pointSize) * sqrt(dist_atten), Get(minPointSize), Get(maxPointSize));
    Out.color = In.inColor;

    RETURN(Out);
}